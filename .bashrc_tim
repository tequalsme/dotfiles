# --------------------------
# Env
# --------------------------

# Homes
[[ -d /usr/java/latest ]] && export JAVA_HOME=/usr/java/latest
[[ -d /opt/maven/current ]] && export M2_HOME=/opt/maven/current
[[ -d /opt/zookeeper/current ]] && export ZOOKEEPER_HOME=/opt/zookeeper/current
[[ -d /opt/hadoop/current ]] && export HADOOP_HOME=/opt/hadoop/current
[[ -d /opt/accumulo/current ]] && export ACCUMULO_HOME=/opt/accumulo/current

# Opts
export JAVA_OPTS="-Xms512m -Xmx1024m -XX:MaxPermSize=512m"
export MAVEN_OPTS="-Xms512m -Xmx1024m -XX:MaxPermSize=512m"

# RVM
[[ -d $HOME/.rvm ]] && RVM_HOME=$HOME/.rvm
[[ -r "$RVM_HOME/scripts/completion" ]] && source "$RVM_HOME/scripts/completion"
[[ -s "$RVM_HOME/scripts/rvm" ]] && source "$RVM_HOME/scripts/rvm"

# Git
# 1.8 - git-prompt.sh
# 1.7 - git-completion.sh
[[ -f /usr/share/git-core/contrib/completion/git-prompt.sh ]] && source /usr/share/git-core/contrib/completion/git-prompt.sh
#[[ -f /path/to/git-completion.sh ]] && source /path/to/git-completion.sh
if type -t __git_ps1 > /dev/null 2>&1; then
    GIT_PS1_SHOWDIRTYSTATE=1
    GIT_PS1_SHOWSTASHSTATE=1
    GIT_PS1_SHOWUNTRACKEDFILES=1
    # color prompt with Git status (\w for full working dir, \W for basename)
    #PS1='\[\e[0m\]\u@\h:\[\e[34m\]\W\[\e[0m\]$(__git_ps1 "(%s)")\$ '
    # same prompt as above, without hostname
    PS1='\[\e[0m\]\u:\[\e[34m\]\W\[\e[0m\]$(__git_ps1 "(%s)")\$ '
else
    # color prompt without Git status
    #PS1='\[\e[0m\]\u@\h:\[\e[34m\]\W\[\e[0m\]\$ '
    # same prompt as above, without hostname
    PS1='\[\e[0m\]\u:\[\e[34m\]\W\[\e[0m\]\$ '
fi

# Paths
# pathmunge copied from /etc/profile
pathmunge() {
    case ":${PATH}:" in
        *:"$1":*)
            ;;
        *)
            if [ "$2" = "after" ] ; then
                PATH=$PATH:$1
            else
                PATH=$1:$PATH
            fi
    esac
}

[[ -d "$M2_HOME" ]]   && pathmunge $M2_HOME/bin
[[ -d "$JAVA_HOME" ]] && pathmunge $JAVA_HOME/bin
[[ -d "$HOME/bin" ]]  && pathmunge $HOME/bin

[[ -d "$ACCUMULO_HOME" ]]  && pathmunge $ACCUMULO_HOME/bin after
[[ -d "$HADOOP_HOME" ]]    && pathmunge $HADOOP_HOME/bin after
[[ -d "$ZOOKEEPER_HOME" ]] && pathmunge $ZOOKEEPER_HOME/bin after

# Cygwin
case "`uname`" in
    CYGWIN*)
        echo "CYGWIN!"
        export CYGWIN=nodosfilewarning
        ;;
esac

# Misc
export EDITOR=vim
export VISUAL=vim
export LESS=Rqi

[[ -z $TMOUT ]] || echo "WARNING: TMOUT=${TMOUT}. 'unset TMOUT' in /etc/profile.d/local.sh and start new terminal."

#bind 'set bind-tty-special-chars off'
#bind '"\ep": history-search-backward'
#bind '"\en": history-search-forward'
#bind '"\C-w": backward-kill-word'

# --------------------------
# History
# --------------------------
# Store 10,000 history entries
export HISTSIZE=10000
# Don't store duplicates
export HISTCONTROL=erasedups

# --------------------------
# Shell Options
# --------------------------
# Don't wait for job termination notification
set -o notify

# Use case-insensitive filename globbing
shopt -s nocaseglob

# Make bash append rather than overwrite history on disk
shopt -s histappend

# When changing directory, small typos can be ignored by bash.
# For example, cd /vr/lg/apaache would find /var/log/apache
shopt -s cdspell

# --------------------------
# Aliases
# --------------------------
alias cp="cp -p"
alias d="dirs"
alias ff="find . -name"
alias grep="grep --color=auto"
alias g=grep
alias h=history
alias ls="ls -G --color=auto --show-control-chars"
alias l="ls -l"
alias la="l -A"
alias lt="l -t"
alias lat="l -At"
alias l1="ls -1"
alias p="pushd"
alias pd="popd"
alias scp="scp -p"
alias scratch="cat > /dev/null"
alias ssh="ssh -AX"
alias tf="tail -f"
alias x=exit

alias mvnfull='mvn clean install'
alias mvnquick='mvn clean install -DskipTests=true'

alias pomgrep='find . -path "*/target" -prune -o -name pom.xml -print0 | xargs -0 grep "$@"'

# --------------------------
# Functions
# --------------------------

# recursive grep, skipping the following directories:
#   ./.git
#   */.svn
#   */target
rgrep() {
    find . -path ./.git -prune -o \
           -path "*/.svn" -prune -o \
           -path "*/target" -prune -o \
           -type f -print0 2> /dev/null | xargs -0 grep "${@}"
}
findsrc() {
    find . -path ./.git -prune -o \
           -path "*/.svn" -prune -o \
           -path "*/target" -prune -o \
           "${@}"
}

# --------------------------
# Misc
# --------------------------

if [ -f ~/.ssh-agent-init ]; then
    . ~/.ssh-agent-init
fi
if [ -f ~/.go/env ]; then
    . ~/.go/env
fi
